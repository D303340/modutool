import { Page } from "../../components/page.slint";
import { Pallet, Fonts } from "../../components/style.slint";
import { SimpleButton, ToggleSlide, ToggleButton, MatrixRadio, DropDown } from "../../components/buttons.slint";
import { NumberInput, KeypadInput } from "../../components/input.slint";
import { LineGraph } from "../../components/graphs.slint";

struct console-output {
    time : string,
    message : string
}

export global SchindlerPageLogic {
    // Every property and/or callback you want to 
    // expose to Rust must be declared here...
    callback keypad-clicked(keypad-value: string);
    callback keypad-enter(keypad-value: string);

    // Schindler Commands
    callback Send_Command(command: string);
    callback Send_Command_Number(command: string, value: int);
    callback Send_Command_HEX(command: string, value: int);


    in property <string> console-main: "";
    in property <string> console-time: "";
    in property <[console-output]> output-message : [
        {time: "00:00:00", message: "Hello World!"},
        {time: "00:00:00", message: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. \nCurabitur ultrices condimentum elementum. \nNam ut varius sem. Nunc id finibus est."},
        {time: "00:00:00", message: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur ultrices condimentum elementum. Nam ut varius sem. Nunc id finibus est."},
        {time: "00:00:00", message: "Hello World again!"}
    ];

    in property <[float]> graph-data: [0];
}

enum visual-info-tab-state {
    Essential,
    Doors,
    floor,
}


enum programboard-direction-state {
    Up,
    Down,
    Stop 
}

component keypad-led-indicator inherits VerticalLayout {
    height: 20px;
    width: 90px;

    spacing: 60px;

    in-out property <programboard-direction-state> state: programboard-direction-state.Stop;

    in property <brush> top-led: state == programboard-direction-state.Up && state != programboard-direction-state.Stop ? #ff0000 : #3f3f3f.brighter(0.5);
    in property <brush> bottom-led: state == programboard-direction-state.Down && state != programboard-direction-state.Stop ? #ff0000 : #3f3f3f.brighter(0.5);


    // TOP
    Rectangle {
        Rectangle {
            background: top-led;
            width: 18px;
            height: 14px;
            x: 0px;
            y: 16px;
        }
        
        Rectangle {
            background: top-led;
            width: 18px;
            height: 14px;
            x: parent.width / 2 - self.width / 2;
            y: 0px;
        }
        
        Rectangle {
            background: top-led;
            width: 18px;
            height: 14px;
            x: parent.width - self.width;
            y: 16px;
        }
    }

    // BOTTOM

    Rectangle {
        Rectangle {
            background: bottom-led;
            width: 18px;
            height: 14px;
            x: 0px;
            y: 0px;
        }
        
        Rectangle {
            background: bottom-led;
            width: 18px;
            height: 14px;
            x: parent.width / 2 - self.width / 2;
            y: 16px;
        }
        
        Rectangle {
            background: bottom-led;
            width: 18px;
            height: 14px;
            x: parent.width - self.width;
            y: 0px;
        }
    }
}

component child-panel {
    // width: 254px;
    // height: 200px;
    
    in property <string> title: "Child Panel";
    in property <length> title-padding-x: 0px;
    in property <length> title-padding-y: 0px;

    in property <length> title-content-spacing: 20px;
    
    in property <length> content-padding: 4px;


    // Background
    Rectangle {

        GridLayout {
            // Title
            Rectangle {
                
                row: 0;
                col: 1;
                title-component := Text {
                    text: title;
                    font-family: "Roboto";
                    font-size: 18px;
                    font-weight: 900;
                    x: 0;
                    color: Pallet.child-panel-title;
                }

            }

            // Content
            Rectangle {
                row: 1;
                col: 1;
                // width: parent.width - 2 * content-padding;
                // height: parent.height - (2 * content-padding) - title-component.height - title-content-spacing;
                // x: content-padding;
                // y: parent.height - self.height - content-padding;

                VerticalLayout {
                    padding: content-padding;
                    @children
                }
            }


            // STYLING
            Rectangle { 
                // padding
                row: 0;
                col: 0;
                width: 16px;
                height: 16px;
                Rectangle {
                    width: 8px;
                    height: 8px;
                    border-radius: 4px;
                    background: Pallet.child-panel-title;
                }

            }

            Rectangle { 
                // padding
                row: 1;
                col: 0;
                width: 16px;
                Rectangle {
                    width: 1px;
                    background: Pallet.child-panel-title;
                }

            }
        
        }

    }
}


struct tab {
    id: int,
    name: string,
    width: length
}
component tab-navigation-bar inherits HorizontalLayout{
    spacing: 2px;

    in-out property <[tab]> tabs: [{name: "Essential", id: 0, width: 20px}, 
                                   {name: "Doors", id: 1, width: 20px}, 
                                   {name: "Floor", id: 2, width: 20px}];
    
    in-out property <int> current-tab;
    in property <length> parent-width: 200px;

    for tab[i] in tabs : Rectangle {
        VerticalLayout {
            // Selection Indicator
            Rectangle {
                width: tab.width;
                height: 3px;
                Rectangle {
                    height: 3px;
                    width: tab.width + 2px;
                    x: 0;
                    background: current-tab == tab.id ? Pallet.primary : transparent;
                }
            }

            SimpleButton {
                border-radius: 0;
                background: current-tab == tab.id ? Pallet.panel-background : transparent;
                width: tab.width;
                height: 36px;

                Text {
                    y: 7px;
                    text: tab.name;
                    font-size: 16px;
                    font-weight: 500;
                    color: current-tab == tab.id ? Pallet.navigation-bar-text-active : Pallet.navigation-bar-tab-inactive;
                    vertical-alignment: center;
                }

                clicked => {
                    current-tab = tab.id;
                }
            }
        }

        // SEPARATOR LEFT
        Rectangle {
            width: 2px;
            height: 34px;
            background: transparent;

            x: 0;
            y: 3px;
            
            states [
                active when (i == 0 || i == tabs.length) : {
                    background: transparent;
                }
                active when (current-tab == i) : {
                    background: Pallet.navigation-bar-tab-inactive;
                }
            ]
        }

        // SEPARATOR Right
        Rectangle {
            width: 2px;
            height: 34px;
            background: transparent;

            x: tab.width;
            y: 3px;
            
            states [
                active when (current-tab == i) : {
                    background: Pallet.navigation-bar-tab-inactive;
                }
            ]
        }
    }
}






// ---------------------- Command Panels ---------------------- //

// Component to add some aditional animations and properties to the command panel
component command-panel inherits VerticalLayout{
    padding: 16px;
    padding-top: 30px;
    spacing: 16px;

    // starter values
    y: -20px;
    opacity: 0;

    alignment: start;
    in property <length> command-panel-width: 400px;

    

    @children

    animate y, opacity {
        duration: 1s;
        easing: ease-out-expo;
    }

    init => {
        self.y = 0px;
        self.opacity = 1;
    }
}

// Config Panel
component command-panel-config inherits command-panel {
    padding: 16px;
    padding-top: 30px;
    spacing: 16px;
    alignment: start;
    command-panel-width: 400px;

    // List Mode
    child-panel {
        title: "List Mode";
        height: 270px;
        content-padding: 12px;

        VerticalLayout {
            spacing: 20px;
            HorizontalLayout {
                padding-right: 23px;
                Text { 
                    text: "Enabled:";
                    font-weight: 700;
                    font-size: 18px;
                    vertical-alignment: center;
                    color: Pallet.default-text;
                }
                list-mode-enabled := ToggleSlide {
                    width: 60px;
                    height: 30px;
                    clicked => {
                        SchindlerPageLogic.Send_Command_Number("List_Mode:=", self.toggled == true ? mode.active.mode : 0);
                    }
                }
            }

            mode := MatrixRadio {
                height: 164px;
                button-height: 50px;
                button-width: 105px;
                button-padding: 0px;
                button-spacing: 0px;
                button-radius: 3px;
                inactive-color: #3D3D3D;

                buttons: [  
                {id: 0, mode: 1, text: "Common", active: true},
                {id: 1, mode: 2, text: "Door", active: false},
                {id: 2, mode: 3, text: "Drive", active: false},
                {id: 3, mode: 4, text: "Cabin", active: false},
                {id: 4, mode: 5, text: "Panels", active: false},
                {id: 5, mode: 6, text: "BIO-BUS", active: false},
                {id: 6, mode: 7, text: "CAN-BUS", active: false},
                {id: 7, mode: 8, text: "Busilog", active: false},
                {id: 8, mode: 9, text: "All", active: false} ];
                
                changed active => { 
                    if list-mode-enabled.toggled == true {
                        SchindlerPageLogic.Send_Command_Number("List_Mode:=", self.active.mode); 
                    }
                }
            }   
        }   
    }


    // Data Dumps
    child-panel {
        title: "Data Dumps";
        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;
            
            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Show System Info:";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }
                
                clicked => {
                    SchindlerPageLogic.Send_Command_Number("SYSTEM_INFO:=", 1);
                }
            }
            
            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Read Sim Card:";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }
                
                clicked => {
                    SchindlerPageLogic.Send_Command_Number("READ_SIM_CARD:=", 1);
                }
            }

            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Show EEPROM Info:";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }
                
                clicked => {
                    SchindlerPageLogic.Send_Command_Number("GC_SHOW_EE:=", 1);
                    // SchindlerPageLogic.Send_Command("fake");
                }
            }    
        }   
    }


    // Calibration
    child-panel {
        title: "Calibration";
        height: 130px;

        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;
            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Load-cell Ram Cal.";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }
                
                clicked => {
                    SchindlerPageLogic.Send_Command_Number("CLC_RAM_FREQUENCY:=", 1);
                }
            }
        }
    }
}

// I/O Panel
component command-panel-io inherits command-panel {
    padding: 16px;
    padding-top: 30px;
    spacing: 16px;
    alignment: start;
    command-panel-width: 400px;

    // Alerts
    child-panel {
        title: "Alerts";

        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;
            HorizontalLayout {
                alignment: start;
                spacing: 25px;
                Text { 
                    text: "Enable: ";
                    font-weight: 700;
                    font-size: 18px;
                    vertical-alignment: center;
                    color: Pallet.default-text;
                }
                ToggleSlide {
                    width: 60px;
                    height: 30px;
                    clicked => {
                        SchindlerPageLogic.Send_Command_Number("ENABLE_IO_NOTIFICATION:=", self.toggled == true ? 1 : 0);
                    }
                }
            }
        }
    }

    // Status
    child-panel {
        title: "Status";
        content-padding: 12px;

        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;
            
            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "SCIS I/O port status";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }

                clicked => {
                    SchindlerPageLogic.Send_Command_Number("CTRL_IOSTATUS:=", 1);
                }
            }

            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "SDIS I/O port status";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }

                clicked => {
                    SchindlerPageLogic.Send_Command_Number("CTRL_IOSTATUS_RQST:=", 1);
                }
            }

            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "SDIS3 I/O port status";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }

                clicked => {
                    SchindlerPageLogic.Send_Command_Number("CAR_IOSTATUS_RQST:=", 1);
                }
            }
        }   
    }

    // Services
    child-panel {
        title: "Services";
        content-padding: 12px;
        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;
            
            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Subsystem Availability";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }
                
                clicked => {
                    SchindlerPageLogic.Send_Command_Number("CTRL_AVAILABILITY:=", 1);
                }
            }

            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Active service(s)";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }
                
                clicked => {
                    SchindlerPageLogic.Send_Command_Number("CTRL_SHOW_SERVICES:=", 1);
                }
            }
        }   
    } 
}

// Errors Panel
component command-panel-errors inherits command-panel {
    padding: 16px;
    padding-top: 30px;
    spacing: 16px;
    alignment: start;
    command-panel-width: 400px;

    // Error History
    child-panel {
        title: "Error History";
        content-padding: 12px;

        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;

            Text {
                text: "Show Error(s)";
                font-family: "Roboto";
                color: #ffffff;
                font-weight: 700;
                font-size: 18px;
                height: 12px;
            }
            HorizontalLayout {
                spacing: 8px;
                number := NumberInput {
                    width: 200px;
                    height: 45px;
                }
                SimpleButton {
                    height: 45px;
                    border-width: 1px;
                    border-color: self.background.brighter(0.5);
                    background: #40494C;
                    background-select: #40494C.brighter(0.5);

                    Text {
                        vertical-alignment: center;
                        text: "Send";
                        font-family: "Roboto";
                        color: #ffffff;
                        font-weight: 500;
                        font-size: 18px;
                        height: 12px;
                    }

                    clicked => {
                        SchindlerPageLogic.Send_Command_Number("SHOW_LAST_ERROR:=", number.value);
                    }
                }
            }
            
            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Show Last 10 Error";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }

                clicked => {
                    SchindlerPageLogic.Send_Command_Number("", 4);
                }
            }
        }   
    }

    // System Status
    child-panel {
        title: "System Status";
        content-padding: 12px;
        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;
            
            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Show System Status";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }
                
                clicked => {
                    SchindlerPageLogic.Send_Command_Number("", 5);
                }
            }
        }   
    } 

    // Error Reset
    child-panel {
        title: "Error Reset";
        content-padding: 12px;
        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;
            
            SimpleButton {
                height: 45px;
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Clear Persistent Fatal Error";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }
                
                clicked => {
                    SchindlerPageLogic.Send_Command_Number("clr_persistent:=", 1);
                }
            }
        }   
    } 
}

// Trafic Panel
component command-panel-traffic inherits command-panel {
    padding: 16px;
    padding-top: 30px;
    spacing: 16px;
    alignment: start;
    command-panel-width: 400px;

    // Stats
    child-panel {
        title: "Traffic Simulation";
        content-padding: 12px;

        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;
            
            VerticalLayout {
                spacing: 20px;
                HorizontalLayout {
                    height: 20px;
                    alignment: space-between;
                    Text {
                        text: "Trips/hour traffic";
                        font-weight: 500;
                        font-size: 18px;
                        font-family: "Roboto";
                        color: #ffffff;
                        vertical-alignment: center;
                    }
    
                    Rectangle {
                        width: 150px;
                        simulation_traffic_selection := DropDown {
                            go-up: true;
                            y: -270px;
                            button-width: parent.width;
                            items: [{id: 0, text: "90 times", active: false},
                                    {id: 1, text: "120 times", active: false},];
                        }
                    }
                }
    
                HorizontalLayout {
                    height: 20px;
                    alignment: space-between;
                    Rectangle {
                        height: 40px;
                        Text {
                            text: "Sim.Floor Calls";
                            font-weight: 500;
                            font-size: 18px;
                            font-family: "Roboto";
                            color: #ffffff;
                            vertical-alignment: center;
                        }
                    }
    
                    floor-calls-input := NumberInput {
                        width: 150px;
                        height: 40px;
                    }
                }
            }

            HorizontalLayout {
                padding-top: 27px;
                spacing: 12px;
                SimpleButton {
                    height: 45px;
                    width: (308px / 2) - 6px;
                    background: #37934B;
                    Text {
                        text: "Start Trips";
                        font-weight: 500;
                        font-size: 18px;
                        font-family: "Roboto";
                        color: #ffffff;
                    }   

                    clicked => {
                        SchindlerPageLogic.Send_Command(simulation_traffic_selection.current-item-id == 0 ? "SYS_SIM_START:=12D" : "SYS_SIM_START:=11E");
                    }
                }
                SimpleButton {
                    height: 45px;
                    width: (308px / 2) - 6px;
                    background: #37934B;
                    Text {
                        text: "Start Floor Call";
                        font-weight: 500;
                        font-size: 18px;
                        font-family: "Roboto";
                        color: #ffffff;
                    }

                    clicked => {
                        SchindlerPageLogic.Send_Command_Number("SIM_FLOOR_CALL:=", floor-calls-input.value)
                    }
                }
            }

            SimpleButton {
                height: 45px;
                background: #9C3C3C;
                Text {
                    text: "Stop Traffic";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: #ffffff;
                }

                clicked => {
                    SchindlerPageLogic.Send_Command("SYS_SIM_START:=0");
                }
            }
        }   
    }
    
    // Measure
    child-panel {
        title: "Measure";
        content-padding: 12px;

        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;
            
            SimpleButton {
                height: 45px;
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Cell Measurement";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }

                clicked => {
                    SchindlerPageLogic.Send_Command_Number("CAR_LOAD_RQST:=", 1);
                }
            }

            SimpleButton {
                height: 45px;
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Hoistway image";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }

                clicked => {
                    SchindlerPageLogic.Send_Command_Number("READ_SHAFT_EE:=", 1);
                }
            }
        }   
    }

    // Stats
    child-panel {
        title: "Stats";
        content-padding: 12px;

        VerticalLayout {
            spacing: 12px;
            padding-top: 15px;
            padding-bottom: 10px;
            padding-left: 10px;
            padding-right: 10px;
            
            SimpleButton {
                height: 45px;
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Trip Counter";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }

                clicked => {
                    SchindlerPageLogic.Send_Command("TELE_TRIP_COUNTER")
                }
            }

            SimpleButton {
                height: 45px;
                background: #40494C;
                background-select: #40494C.brighter(0.5);
                border-width: 1px;
                border-color: self.background.brighter(0.5);
                Text { 
                    x: 12px;
                    text: "Door-statistic Data";
                    font-weight: 500;
                    font-size: 18px;
                    font-family: "Roboto";
                    color: Pallet.default-text;
                    vertical-alignment: center;
                }

                clicked => {
                    SchindlerPageLogic.Send_Command_Number("TELE_CMD:=", 0);
                }
            }
        }   
    }   
}

// Keypad Panel
component command-panel-keypad inherits command-panel {
    padding: 16px;
    alignment: start;
    command-panel-width: 400px;

    VerticalLayout {
        padding-top: 32px;
        spacing: 16px;

        // Input Field
        keypad := KeypadInput {
            width: 254px;
            height: 70px;
            x: parent.width / 2 - self.width / 2;
        }

        // Keypad
        Rectangle {
            Rectangle {
                property <length> button-width: 80px;
                property <length> button-height: 80px;

                property <length> keypad-width: 240px;
                property <length> keypad-spacing: 6px;
    
                width: keypad-width + (keypad-spacing * 2); 
                height: keypad-width + (keypad-spacing * 2); 
    
                VerticalLayout {
                    spacing: keypad-spacing;
                    HorizontalLayout {
                        spacing: keypad-spacing;

                        SimpleButton { width: keypad-width / 3; height: keypad-width / 3;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "1"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "1";
                                SchindlerPageLogic.keypad-clicked("1");
                            }
                        }
                        SimpleButton { width: button-width; height: button-height;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "2"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "2";
                                SchindlerPageLogic.keypad-clicked("2");
                            }
                        }
                        SimpleButton { width: button-width; height: button-height;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "3"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "3";
                                SchindlerPageLogic.keypad-clicked("3");
                            }
                        }
                    }
    
                    HorizontalLayout {
                        spacing: keypad-spacing;
                        
                        SimpleButton { width: keypad-width / 3; height: keypad-width / 3;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "4"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "4";
                                SchindlerPageLogic.keypad-clicked("4");
                            }
                        }
                        SimpleButton { width: button-width; height: button-height;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "5"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "5";
                                SchindlerPageLogic.keypad-clicked("5");
                            }
                        }
                        SimpleButton { width: button-width; height: button-height;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "6"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "6";
                                SchindlerPageLogic.keypad-clicked("6");
                            }
                        }
                    }
    
                    HorizontalLayout {
                        spacing: keypad-spacing;
                        
                        SimpleButton { width: keypad-width / 3; height: keypad-width / 3;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "7"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "7";
                                SchindlerPageLogic.keypad-clicked("7");
                            }
                        }
                        SimpleButton { width: button-width; height: button-height;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "8"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "8";
                                SchindlerPageLogic.keypad-clicked("8");
                            }
                        }
                        SimpleButton { width: button-width; height: button-height;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "9"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "9";
                                SchindlerPageLogic.keypad-clicked("9");
                            }
                        }
                    }

                    HorizontalLayout {
                        spacing: keypad-spacing;
                        
                        SimpleButton { width: keypad-width / 3; height: keypad-width / 3;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "<>"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "<>";
                                SchindlerPageLogic.keypad-clicked("<>");
                            }
                        }
                        SimpleButton { width: button-width; height: button-height;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "0"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "0";
                                SchindlerPageLogic.keypad-clicked("0");
                            }
                        }
                        SimpleButton { width: button-width; height: button-height;
                            background: Pallet.keypad-button;
                            background-select: Pallet.keypad-button-pressed;
                            Text { text: "><"; font-size: 24px; font-weight: 500; color: Pallet.default-text; vertical-alignment: center; }
                            clicked => {
                                keypad.value += "><";
                                SchindlerPageLogic.keypad-clicked("><");
                            }
                        }
                    }
                }
            }
        }
    }
}

// ---------------------- Schindler Page ---------------------- //

export component SchindlerPage inherits Page {
    title: "Schindler Bionic 3300"; 
    background: Pallet.background;
    GridLayout {
        spacing: 12px;
        padding: 12px;

        // Command Panel
        Rectangle {
            background: Pallet.panel-background;
            rowspan: 2;
            width: 400px;
            height: 776px;
            clip: true;

        
            // Command Panel
            command-panel := GridLayout {
                Rectangle {
                    height: 37px;
                    row: 0;
                    Rectangle {
                        height: 2px;
                        y: 35px;
                        Rectangle {
                            height: 2px;
                            width: parent.width;
                            background: Pallet.navigation-bar-tab-inactive;
                        }
                    }
                    tab-navigation := tab-navigation-bar {
                        y: 0px;
                        tabs: [{name: "Config", id: 0, width: 80px},
                                {name: "I/O", id: 1, width: 60px},
                                {name: "Errors", id: 2, width: 80px},
                                {name: "Traffic", id: 3, width: 80px},
                                {name: "Keypad", id: 4, width: 92px}];
                        current-tab: 0;
                        parent-width: self.width;
        
                    }
                }

                // Commands

                Rectangle {
                    row: 1;
                    if tab-navigation.current-tab == 0 : command-panel-config {
                        command-panel-width: command-panel.width;
                    }

                    if tab-navigation.current-tab == 1 : command-panel-io {
                        command-panel-width: command-panel.width;
                    }

                    if tab-navigation.current-tab == 2 : command-panel-errors {
                        command-panel-width: command-panel.width;
                    }

                    if tab-navigation.current-tab == 3 : command-panel-traffic {
                        command-panel-width: command-panel.width;
                    }

                    if tab-navigation.current-tab == 4 : command-panel-keypad {
                        command-panel-width: command-panel.width;
                    }
                }
            }
        }


        /// Middle Panel
        // This is so the Console can resize properly
        // slint doesn't support changing the col and row at runtime
        middle-panel := Rectangle {
            col: 1;
            row: 0;
            rowspan: 2;        

            // Visual Info
            Rectangle {
                y: 0;
                height: 494px;
                background: Pallet.panel-background;
                property <length> panel-width: parent.width / 3;
                in-out property <visual-info-tab-state> current-tab: visual-info-tab-state.Essential;

                // Middle Separator
                Rectangle {
                    background: Pallet.navigation-bar-tab-inactive;
                    height: 2px;
                    y: 37px;
                }

                VerticalLayout {
                    // NAVIGATION BAR
                    HorizontalLayout {

                        VerticalLayout {
                            // Selection Indicator
                            Rectangle {
                                width: 90px;
                                height: 3px;
                                Rectangle {
                                    height: 3px;
                                    width: 92px;
                                    x: 0px;
                                    background: current-tab == visual-info-tab-state.Essential ? Pallet.primary : transparent;
                                }
                            }

                            SimpleButton {
                                border-radius: 0;
                                background: current-tab == visual-info-tab-state.Essential ? Pallet.panel-background : transparent;
                                width: 90px;
                                height: 36px;

                                Text {
                                    y: 7px;
                                    text: "Essential";
                                    font-size: 16px;
                                    font-weight: 500;
                                    color: current-tab == visual-info-tab-state.Essential ? Pallet.navigation-bar-text-active : Pallet.navigation-bar-tab-inactive;
                                    vertical-alignment: center;
                                }

                                clicked => {
                                    current-tab = visual-info-tab-state.Essential;
                                }
                            }
                        }

                        // SEPARATOR
                        Rectangle {
                            width: 2px;
                            height: 34px;
                            y: 3px;
                            background: current-tab == visual-info-tab-state.Essential || current-tab == visual-info-tab-state.Doors ? Pallet.navigation-bar-tab-inactive : transparent;
                        }

                        // DOORS
                        VerticalLayout {

                            // Selection Indicator
                            Rectangle {
                                width: 90px;
                                Rectangle {
                                    height: 3px;
                                    width: 94px;
                                    background: current-tab == visual-info-tab-state.Doors ? Pallet.primary : transparent;
                                }
                            }

                            SimpleButton {
                                border-radius: 0;
                                background: current-tab == visual-info-tab-state.Doors ? Pallet.panel-background : transparent;
                                width: 90px;
                                height: 36px;

                                Text {
                                    y: 7px;
                                    text: "Doors";
                                    font-size: 16px;
                                    font-weight: 500;
                                    color: current-tab == visual-info-tab-state.Doors ? Pallet.navigation-bar-text-active : Pallet.navigation-bar-tab-inactive;
                                    vertical-alignment: center;
                                }

                                clicked => {
                                    current-tab = visual-info-tab-state.Doors;
                                }
                            }
                        }

                        // SEPARATOR
                        Rectangle {
                            width: 2px;
                            height: 34px;
                            y: 3px;
                            background: current-tab == visual-info-tab-state.Doors || current-tab == visual-info-tab-state.floor ? Pallet.navigation-bar-tab-inactive : transparent;
                        }

                        // LEVEL
                        VerticalLayout {

                            // Selection Indicator
                            Rectangle {
                                width: 90px;
                                Rectangle {
                                    height: 3px;
                                    width: 94px;
                                    background: current-tab == visual-info-tab-state.floor ? Pallet.primary : transparent;
                                }
                            }

                            SimpleButton {
                                border-radius: 0;
                                background: current-tab == visual-info-tab-state.floor ? Pallet.panel-background : transparent;
                                width: 90px;
                                height: 36px;

                                Text {
                                    y: 7px;
                                    text: "Floor";
                                    font-size: 16px;
                                    font-weight: 500;
                                    color: current-tab == visual-info-tab-state.floor ? Pallet.navigation-bar-text-active : Pallet.navigation-bar-tab-inactive;
                                    vertical-alignment: center;
                                }

                                clicked => {
                                    current-tab = visual-info-tab-state.floor;
                                }
                            }
                        }

                        // SEPARATOR
                        Rectangle {
                            width: 2px;
                            height: 34px;
                            y: 3px;
                            background: current-tab == visual-info-tab-state.floor ? Pallet.navigation-bar-tab-inactive : transparent;
                        }
                    }
                    // VISUAL INFO
                    GridLayout {
                        padding: 16px;
                        spacing: 16px;
                        Row {
                            Rectangle {
                                background: Pallet.child-panel-background;
                                colspan: 2;
                            }
        
                            Rectangle {
                                background: Pallet.child-panel-background;
                            }
        
                            Rectangle {
                                // width: (600px - 64px) / 3;
                                rowspan: 2;
                                background: Pallet.child-panel-background;
                            }
                        }
        
                        Row {
                            Rectangle {
                                width: (600px - 64px) / 3;
                                height: self.width;
                                background: Pallet.child-panel-background;
                            }
        
                            Rectangle {
                                width: (600px - 64px) / 3;
                                height: self.width;
                                background: Pallet.child-panel-background;
                            }
                        }
                    }
                }

            }

            // Console
            console-panel := VerticalLayout {
                x: middle-panel.width - self.width;
                y: middle-panel.height - self.height;
                in-out property <bool> maximized: true;
                in-out property <bool> autoscroll: false;

                property <length> console-font-size: 16px;

                
                height: maximized ? middle-panel.height : 270px;
                
                spacing: -1px;

                // HEADER
                Rectangle {
                    height: 40px;
                    background: Pallet.console-header-background;
                    border-width: 1px;
                    border-color: Pallet.console-border;

                    

                    HorizontalLayout {
                        padding-left: 8px;
                        padding-right: 8px;
                        alignment: space-between;
                        HorizontalLayout {
                            spacing: 8px;
                            SimpleButton {
                                width: parent.height;
                                height: parent.height;
                                background: transparent;
                                background-select: transparent;
                                Image {
                                    source: @image-url("../../assets/icons/Console_Bottom.png");
                                    width: 25px;
                                    height: 25px;
                                }

                                clicked => {
                                    // log-view.viewport-y = log-view.height - log-view.viewport-height;
                                    autoscroll = true;
                                }
                            }
        
                            SimpleButton {
                                width: parent.height;
                                height: parent.height;
                                background: transparent;
                                background-select: transparent;
                                Image {
                                    source: @image-url("../../assets/icons/Save.png");
                                    width: 25px;
                                    height: 25px;
                                }
                            }
        
                            SimpleButton {
                                width: parent.height;
                                height: parent.height;
                                background: transparent;
                                background-select: transparent;
                                Image {
                                    source: @image-url("../../assets/icons/Erase.png");
                                    width: 25px;
                                    height: 25px;
                                }
                                clicked => {
                                    SchindlerPageLogic.output-message = [{time: "", message: ""}];
                                    log-view.viewport-y = log-view.height - log-view.viewport-height;
                                }
                            }
                        }

                        // ------------------------------------------------------------------------
                        // For now, this is commented out, because we don't have any icons for the 
                        // Visual panel yet.
                        // ------------------------------------------------------------------------
                        
                        // SimpleButton {
                        //     width: parent.height;
                        //     height: parent.height;
                        //     background: transparent;
                        //     background-select: transparent;
                        //     Image {
                        //         source: @image-url("../../assets/icons/Console_Maximize.png");
                        //         width: 25px;
                        //         height: 25px;
                        //         colorize: #d3d3d3;
                        //     }

                        //     clicked => {
                        //         if (console-panel.maximized == false) {
                        //             console-panel.maximized = true;

                        //             console-panel.height = middle-panel.height ;
                        //             console-panel.y = 0px;

                        //             log-view.viewport-y = log-view.height - log-view.viewport-height;
                        //         } else {
                        //             console-panel.maximized = false;
                                    
                        //             console-panel.height = 270px;
                        //             console-panel.y = middle-panel.height - console-panel.height;

                        //             log-view.viewport-y = log-view.height - log-view.viewport-height;
                        //         }

                        //     }
                        // }
                    }


                }

                // CONSOLE
                Rectangle {
                    border-width: 1px;
                    border-color: Pallet.console-border;
                    background: Pallet.console-background;

                    autoscroll_timer := Timer {
                        interval: 100ms;
                        running: autoscroll;
                        triggered() => {
                            log_view.viewport-y = min(0px, - log_view.viewport-height + log_view.height);
                        }
                    }

                    log-view := Flickable {
                        interactive: true;
                        width: parent.width;
                        viewport-width: self.width;
                        
                        viewport-y: {
                            if (self.viewport-height > self.height) { 0px } 
                            else { 0px }   
                        };

                        changed viewport-height => {
                            debug("Viewport Height: " + self.viewport-height / 1px);
                            debug("Viewport y: " + self.viewport-y / 1px);
                        }

                        flicked => {
                            debug("Flicked");
                            autoscroll = false;
                        }
        
                        VerticalLayout {
                            spacing: 4px;
                            padding: 8px;
                            alignment: end;

        
                            for output-message[i] in SchindlerPageLogic.output-message : HorizontalLayout {
                                spacing: 6px;
                                output-message-time := Text {
                                    y: 0px;
                                    text: SchindlerPageLogic.output-message[i].time;
                                    horizontal-alignment: center;
                                    vertical-alignment: top;

                                    font-family: Fonts.console-time-text.font-family;
                                    font-size: Fonts.console-time-text.font-size;
                                    font-weight: Fonts.console-time-text.font-weight;
                                    color: Fonts.console-time-text.font-color;
                                }
        
                                Rectangle {
                                    width: i == SchindlerPageLogic.output-message.length - 1 ? 3px : 2px;
                                    Rectangle {
                                        height: parent.height - 4px;
                                        background: i == SchindlerPageLogic.output-message.length - 1 ? Pallet.primary : Pallet.console-time-text;
                                    }
                                }
        
                                output-message-main := Text {
                                    text: SchindlerPageLogic.output-message[i].message;
                                    width: parent.width - 47px - 6px;
                                    wrap: word-wrap;
                                    horizontal-alignment: left;
                                    vertical-alignment: top;

                                    font-family: Fonts.console-main-text.font-family;
                                    font-size: Fonts.console-main-text.font-size;
                                    font-weight: Fonts.console-main-text.font-weight;
                                    color: Fonts.console-main-text.font-color;
                                }
                            }
                        }
                    } 
                }
            }

        }
        
        // // Keypad
        // Rectangle {
        //     width: 296px;
            
        //     col: 2;
        //     row: 0;
        //     rowspan: 2;
            
            
        //     VerticalLayout {
        //         spacing: 12px;

        //         // TOP
        //         Rectangle {
        //             height: 258px;
        //             background: Pallet.panel-background;
        //         }

        //         // BOTTOM
        //         Rectangle {
        //             background: Pallet.panel-background;
        //             height: 506px;

        //             VerticalLayout {
        //                 alignment: space-between;
        //                 padding-top: 25px;

        //                 keypad-value := KeypadInput {
        //                     x: parent.width / 2 - self.width / 2;
        //                     width: 240px;
        //                     height: 60px;
        //                 }
    
        //                 GridLayout {
        //                     x: parent.width / 2 - self.width / 2;
        //                     width: 260px;
        //                     padding-bottom: 30px;
        //                     spacing: 10px;


        //                     Row {
        //                         SimpleButton { 
        //                             width: 80px;
        //                             height: 80px;
        //                             background: Pallet.keypad-button;
        //                             background-select: Pallet.keypad-button-pressed;
        //                             Text { 
        //                                 text: "1"; 
        //                                 color: Pallet.keypad-text; 
        //                                 font-size: 30px;
        //                             } 

        //                             clicked => {
        //                                 keypad-value.value += "1";
        //                             }
        //                         }
        //                         SimpleButton { 
        //                             width: 80px;
        //                             height: 80px;
        //                             background: Pallet.keypad-button;
        //                             background-select: Pallet.keypad-button-pressed;
        //                             Text { 
        //                                 text: "2"; 
        //                                 color: Pallet.keypad-text; 
        //                                 font-size: 30px;
        //                             }

        //                             clicked => {
        //                                 keypad-value.value += "2";
        //                             }
        //                         }
        //                         SimpleButton { 
        //                             width: 80px;
        //                             height: 80px;
        //                             background: Pallet.keypad-button;
        //                             background-select: Pallet.keypad-button-pressed;
        //                             Text { 
        //                                 text: "3"; 
        //                                 color: Pallet.keypad-text; 
        //                                 font-size: 30px;
        //                             }

        //                             clicked => {
        //                                 keypad-value.value += "3";
        //                             }
        //                         }
        //                     }
    
        //                     Row {
        //                         SimpleButton { 
        //                             width: 80px;
        //                             height: 80px;
        //                             background: Pallet.keypad-button;
        //                             background-select: Pallet.keypad-button-pressed;
        //                             Text { 
        //                                 text: "4"; 
        //                                 color: Pallet.keypad-text; 
        //                                 font-size: 30px;
        //                             }

        //                             clicked => {
        //                                 keypad-value.value += "4";
        //                             }
        //                         }
        //                         SimpleButton { 
        //                             width: 80px;
        //                             height: 80px;
        //                             background: Pallet.keypad-button;
        //                             background-select: Pallet.keypad-button-pressed;
        //                             Text { 
        //                                 text: "5"; 
        //                                 color: Pallet.keypad-text; 
        //                                 font-size: 30px;
        //                             }

        //                             clicked => {
        //                                 keypad-value.value += "5";
        //                             }
        //                         }
        //                         SimpleButton { 
        //                             width: 80px;
        //                             height: 80px;
        //                             background: Pallet.keypad-button;
        //                             background-select: Pallet.keypad-button-pressed;
        //                             Text { 
        //                                 text: "6"; 
        //                                 color: Pallet.keypad-text; 
        //                                 font-size: 30px;
        //                             }

        //                             clicked => {
        //                                 keypad-value.value += "6";
        //                             }
        //                         }
        //                     }
    
        //                     Row {
        //                         SimpleButton { 
        //                             width: 80px;
        //                             height: 80px;
        //                             background: Pallet.keypad-button;
        //                             background-select: Pallet.keypad-button-pressed;
        //                             Text { 
        //                                 text: "7"; 
        //                                 color: Pallet.keypad-text; 
        //                                 font-size: 30px;
        //                             } 

        //                             clicked => {
        //                                 keypad-value.value += "7";
        //                             }
        //                         }
        //                         SimpleButton { 
        //                             width: 80px;
        //                             height: 80px;
        //                             background: Pallet.keypad-button;
        //                             background-select: Pallet.keypad-button-pressed;
        //                             Text { 
        //                                 text: "8"; 
        //                                 color: Pallet.keypad-text; 
        //                                 font-size: 30px;
        //                             }

        //                             clicked => {
        //                                 keypad-value.value += "8";
        //                             }
        //                         }
        //                         SimpleButton { 
        //                             width: 80px;
        //                             height: 80px;
        //                             background: Pallet.keypad-button;
        //                             background-select: Pallet.keypad-button-pressed;
        //                             Text { 
        //                                 text: "9"; 
        //                                 color: Pallet.keypad-text; 
        //                                 font-size: 30px;
        //                             }

        //                             clicked => {
        //                                 keypad-value.value += "9";
        //                             }
        //                         }
        //                     }
    
        //                     Row {
        //                         SimpleButton { 
        //                             width: 80px;
        //                             height: 80px;
        //                             background: Pallet.keypad-button;
        //                             background-select: Pallet.keypad-button-pressed;
        //                             Text { 
        //                                 text: "0"; 
        //                                 color: Pallet.keypad-text; 
        //                                 font-size: 30px;
        //                             }

        //                             clicked => {
        //                                 keypad-value.value += "0";
        //                             }
        //                         }
        //                         SimpleButton { 
        //                             colspan: 2;
        //                             height: 80px;
        //                             background: Pallet.primary;
        //                             background-select: Pallet.primary;
        //                             clicked => {
        //                                 SchindlerPageLogic.keypad-enter(keypad-value.value);
        //                                 keypad-value.value = "";
        //                             }
        //                         }
        //                     }
        //                 }
        //             }
        //         }
        //     }
            
        // }
    }
}