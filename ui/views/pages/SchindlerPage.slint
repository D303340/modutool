import { Page } from "../../components/page.slint";
import { Pallet } from "../../components/style.slint";
import { SimpleButton, ToggleSlide } from "../../components/buttons.slint";

struct console-output {
    time : string,
    message : string
}

export global SchindlerPageLogic {
    // Every property and/or callback you want to 
    // expose to Rust must be declared here...
    callback keypad-clicked(keypad-value: string);

    // Schindler Commands
    callback SIM_FLOOR_CALL();
    callback LIST_MODE(toggled: bool);
    callback SYSTEM_INFO();
    callback SHOW_VERSION();
    callback SHOW_SERVICE_STATE();
    callback SHOW_LAST_ERR();
    callback CLEAR_LAST_ERROR();
    callback READ_SIM_CARD();
    callback CTRL_IOSTATUS();
    callback CAR_IOSTATUS_RQST();
    callback CAR_DEAD_LOOP();
    callback COP_IDENTIFY_HW();
    callback COP_IDENTIFY_SW();
    callback COP_DEAD_LOOP();
    callback GET_CARLIGHT_STATE();


    in property <string> console-main: "";
    in property <string> console-time: "";
    in property <[console-output]> output-message : [
        {time: "00:00:00", message: "Hello World!"},
        {time: "00:00:00", message: "Hello World 2!"}
    ];
}


enum programboard-direction-state {
    Up,
    Down,
    Stop 
}

component keypad-led-indicator inherits VerticalLayout {
    height: 20px;
    width: 90px;

    spacing: 60px;

    in-out property <programboard-direction-state> state: programboard-direction-state.Stop;

    in property <brush> top-led: state == programboard-direction-state.Up && state != programboard-direction-state.Stop ? #ff0000 : #3f3f3f.brighter(0.5);
    in property <brush> bottom-led: state == programboard-direction-state.Down && state != programboard-direction-state.Stop ? #ff0000 : #3f3f3f.brighter(0.5);


    // TOP
    Rectangle {
        Rectangle {
            background: top-led;
            width: 18px;
            height: 14px;
            x: 0px;
            y: 16px;
        }
        
        Rectangle {
            background: top-led;
            width: 18px;
            height: 14px;
            x: parent.width / 2 - self.width / 2;
            y: 0px;
        }
        
        Rectangle {
            background: top-led;
            width: 18px;
            height: 14px;
            x: parent.width - self.width;
            y: 16px;
        }
    }

    // BOTTOM

    Rectangle {
        Rectangle {
            background: bottom-led;
            width: 18px;
            height: 14px;
            x: 0px;
            y: 0px;
        }
        
        Rectangle {
            background: bottom-led;
            width: 18px;
            height: 14px;
            x: parent.width / 2 - self.width / 2;
            y: 16px;
        }
        
        Rectangle {
            background: bottom-led;
            width: 18px;
            height: 14px;
            x: parent.width - self.width;
            y: 0px;
        }
    }
}

export component SchindlerPage inherits Page {
    title: "Schindler 3300";
    background: Pallet.background;
    GridLayout {
        spacing: 12px;
        padding: 12px;

        Rectangle {
            background: Pallet.panel-background;
            rowspan: 2;
            width: 286px;

            VerticalLayout {
                padding: 18px;
                spacing: 8px;

                // System Commands
                HorizontalLayout {
                    padding: 15px;
                    padding-bottom: 30px;
                    alignment: space-between;
                    spacing: 30px;
                    Text {
                        text: "LIST_MODE:";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }
                    ToggleSlide {
                        width: 60px;
                        height: 30px;
                        clicked => {
                            SchindlerPageLogic.LIST_MODE(self.toggled);
                        }
                    }
                }

                HorizontalLayout {
                    alignment: space-between; 
                    SimpleButton { 
                        height: 40px;
                        width: 127px;
                        background: #188bff;
                        border-radius: 4px;
                        Text {
                            text: "SYSTEM_INFO";
                            font-family: "Roboto";
                            font-size: 16px;
                            font-weight: 600;
                            color: Pallet.text;
                            vertical-alignment: center;
                            horizontal-alignment: left;
                        }

                        clicked => {
                            SchindlerPageLogic.SYSTEM_INFO();
                        }
                    }

                    SimpleButton { 
                        height: 40px;
                        width: 112px;
                        background: #188bff;
                        border-radius: 4px;
                        Text {
                            text: "SHOW_VER.";
                            font-family: "Roboto";
                            font-size: 16px;
                            font-weight: 600;
                            color: Pallet.text;
                            vertical-alignment: center;
                            horizontal-alignment: left;
                        }

                        clicked => {
                            SchindlerPageLogic.SHOW_VERSION();
                        }
                    }
                }
            
                property <length> spacers: 0px;

                SimpleButton { 
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    
                    Text {
                        text: "SHOW_SERVICES_STATE";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.SHOW_SERVICE_STATE();
                    }
                }

                // ~~ SPACER ~~
                Rectangle { height: parent.spacers; }
                // ~~ SPACER ~~

                // Fault / Error History
                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "SHOW_LAST_ERR";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.SHOW_LAST_ERR();
                    }
                }

                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "CLEAR_LAST_ERR";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.CLEAR_LAST_ERROR();
                    }
                }

                // ~~ SPACER ~~
                Rectangle { height: parent.spacers; }
                // ~~ SPACER ~~

                // Sim-Card / Floor-Call
                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "REAM_SIM_CARD";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.READ_SIM_CARD();
                    }
                }

                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "SIM_FLOOR_CALL";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.SIM_FLOOR_CALL();
                    }
                }

                // ~~ SPACER ~~
                Rectangle { height: parent.spacers; }
                // ~~ SPACER ~~

                // I/O - Status
                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "CTRL_IOSTATUS";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.CTRL_IOSTATUS();
                    }
                }

                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "CAR_IOSTATUS_RQST";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.CAR_IOSTATUS_RQST();
                    }
                }
                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "GET_CARLIGHT_STATE";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.GET_CARLIGHT_STATE();
                    }
                }

                // ~~ SPACER ~~
                Rectangle { height: parent.spacers; }
                // ~~ SPACER ~~

                // Reset / "Dead-loop" Commands
                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "CAR_DEAD_LOOP";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.CAR_DEAD_LOOP();
                    }
                }

                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "COP_DEAD_LOOP";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.COP_DEAD_LOOP();
                    }
                }

                // ~~ SPACER ~~
                Rectangle { height: parent.spacers; }
                // ~~ SPACER ~~

                // Reset / "Dead-loop" Commands
                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "COP_IDENTIFY_HW";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.COP_IDENTIFY_HW();
                    }
                }

                SimpleButton {
                    height: 40px;
                    width: parent.width - parent.padding - 18px;
                    background: #188bff;
                    border-radius: 4px;
                    padding-bottom: 20px;
                    Text {
                        text: "COP_IDENTIFY_SW";
                        font-family: "Roboto";
                        font-size: 16px;
                        font-weight: 600;
                        color: Pallet.text;
                        vertical-alignment: center;
                        horizontal-alignment: left;
                    }

                    clicked => {
                        SchindlerPageLogic.COP_IDENTIFY_SW();
                    }
                }
            }
        }

        // Visual Info
        Rectangle {
            height: 514px;
            background: Pallet.panel-background;
            col: 1;
            row: 0;

            Text {
                text: "VISUAL INFO";
                color: Pallet.text;
            }
        }

        // Console
        Rectangle {
            col: 1;
            row: 1;
            
            width: 600px;
            height: 250px;
            
            border-width: 1px;
            border-color: Pallet.console-border;
            background: Pallet.console-background;
            
            Flickable {
                interactive: true;
                width: parent.width;
                viewport-width: self.width;
                viewport-y: {
                    if (self.viewport-height > self.height) { self.height - self.viewport-height } 
                    else { 0px }   
                };

                VerticalLayout {
                    spacing: 4px;
                    padding-left: 5px;
                    padding-right: 5px;
                    padding-top: 5px;  
                    padding-bottom: 5px;
                    alignment: end;

                    for output-message[i] in SchindlerPageLogic.output-message : HorizontalLayout {
                        spacing: 6px;
                        Rectangle {
                            width: 43px;
                            Text {
                                y: 0px;
                                text: SchindlerPageLogic.output-message[i].time;
                                wrap: word-wrap;
                                color: Pallet.console-time-text;
                                horizontal-alignment: center;
                                vertical-alignment: bottom;
                            }
                        }
                        
                        Rectangle {
                            width: 3px;
                            height: 3px;
                            background: Pallet.console-time-text;
                            y: 7px;
                        }


                        Text {
                            text: SchindlerPageLogic.output-message[i].message;
                            width: parent.width - 47px - 6px;
                            color: Pallet.console-main-text;
                            horizontal-alignment: left;
                            vertical-alignment: bottom;
                        }
                    }
                }
            } 
        }
        
        // Keypad
        Rectangle {
            background: Pallet.panel-background;
            width: 296px;

            col: 2;
            row: 0;
            rowspan: 2;

            property <[[string]]> keypad-rows: [["1", "2", "3"], 
                                                ["4", "5", "6"], 
                                                ["7", "8", "9"], 
                                                ["-", "0", "*"], 
                                                ["< >",    "> <"]];

            VerticalLayout {
                // LCD
                LCD-Layout := HorizontalLayout {
                    width: parent.width - 65px;
                    x: parent.width / 2 - self.width / 2;
                    height: 250px;
                    alignment: space-between;
                    spacing: 30px;
                    VerticalLayout {
                        spacing: 4px;
                        alignment: end;
    
                        property <length> lcd-font-size: 80px;
                        property <length> lcd-frame-width: 102px;
                        property <length> lcd-frame-height: 100px;
                        property <length> lcd-frame-radius: 4px;
    
                        property <brush> lcd-frame-color: #111111;
                        property <brush> lcd-bg-color: #333333;
                        property <brush> lcd-fg-color: #dfdfdf;
    
                        Rectangle {
                            background: parent.lcd-frame-color;
                            width: parent.lcd-frame-width;
                            height: parent.lcd-frame-height;
                            border-radius: parent.lcd-frame-radius;
                            Text {
                                text: " ‎ ";
                                color: lcd-bg-color;
                                width: parent.width + 28px;
                                horizontal-alignment: left;
                                font-family: "LCDFont";
                                font-size: lcd-font-size;
                            }
                            Text {
                                text: "91";
                                color: lcd-fg-color;
                                width: parent.width + 28px;
                                horizontal-alignment: left;
                                font-family: "LCDFont";
                                font-size: lcd-font-size;
                            }
                        }
                        Rectangle {
                            background: parent.lcd-frame-color;
                            width: parent.lcd-frame-width;
                            height: parent.lcd-frame-height;
                            border-radius: parent.lcd-frame-radius;
                            Text {
                                text: " ‎ ";
                                color: lcd-bg-color;
                                width: parent.width + 28px;
                                horizontal-alignment: left;
                                font-family: "LCDFont";
                                font-size: lcd-font-size;
                            }
                            Text {
                                text: "23";
                                color: lcd-fg-color;
                                width: parent.width + 28px;
                                horizontal-alignment: left;
                                font-family: "LCDFont";
                                font-size: lcd-font-size;
                            }
                        }
                    }

                    keypad-led-indicator {
                        state: programboard-direction-state.Stop;
                        y: parent.height / 2 - self.height / 2 - 15px;
                    }
                }
                
                // KEYPAD
                VerticalLayout {
                    alignment: end;                
                    padding: keypad-spacing;
                    property <length> keypad-spacing: 8px;
                    spacing: keypad-spacing;

                    for keypad-row in keypad-rows : HorizontalLayout {
                        alignment: space-between;

                        for keypad-char in keypad-row : SimpleButton {
                            width: (parent.width / 3) - keypad-spacing;
                            height: (parent.width / 4) - keypad-spacing;
                            border-radius: 5px;
                            background: #1c1c1c;
                            background-select: #617c94;

                            keypad-text := Text {
                                vertical-alignment: center;
                                horizontal-alignment: center;
                                font-size: 24px;
                                font-family: "Roboto";
                                font-weight: 600;
                                color: Pallet.keypad-text;
                                text: keypad-char;
                            }

                            clicked => {
                                SchindlerPageLogic.keypad-clicked(keypad-char);
                            }
                        }
                    }
                }
            }
        }
    }
}