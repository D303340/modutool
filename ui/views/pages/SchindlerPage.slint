import { Page } from "../../components/page.slint";
import { Pallet } from "../../components/style.slint";
import { SimpleButton, ToggleSlide, ToggleButton, MatrixRadio } from "../../components/buttons.slint";
import { NumberInput, KeypadInput } from "../../components/input.slint";
import { LineGraph } from "../../components/graphs.slint";

struct console-output {
    time : string,
    message : string
}

export global SchindlerPageLogic {
    // Every property and/or callback you want to 
    // expose to Rust must be declared here...
    callback keypad-clicked(keypad-value: string);
    callback keypad-enter(keypad-value: string);

    // Schindler Commands
    callback Send_Command(command: string);
    callback Send_Command_Number(command: string, value: int);
    callback Send_Command_HEX(command: string, value: int);


    in property <string> console-main: "";
    in property <string> console-time: "";
    in property <[console-output]> output-message : [
        {time: "00:00:00", message: "Hello World!"},
        {time: "00:00:00", message: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. \nCurabitur ultrices condimentum elementum. \nNam ut varius sem. Nunc id finibus est."},
        {time: "00:00:00", message: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur ultrices condimentum elementum. Nam ut varius sem. Nunc id finibus est."},
        {time: "00:00:00", message: "Hello World again!"}
    ];

    in property <[float]> graph-data: [0];
}

enum visual-info-tab-state {
    Essential,
    Doors,
    floor,
}


enum programboard-direction-state {
    Up,
    Down,
    Stop 
}

component keypad-led-indicator inherits VerticalLayout {
    height: 20px;
    width: 90px;

    spacing: 60px;

    in-out property <programboard-direction-state> state: programboard-direction-state.Stop;

    in property <brush> top-led: state == programboard-direction-state.Up && state != programboard-direction-state.Stop ? #ff0000 : #3f3f3f.brighter(0.5);
    in property <brush> bottom-led: state == programboard-direction-state.Down && state != programboard-direction-state.Stop ? #ff0000 : #3f3f3f.brighter(0.5);


    // TOP
    Rectangle {
        Rectangle {
            background: top-led;
            width: 18px;
            height: 14px;
            x: 0px;
            y: 16px;
        }
        
        Rectangle {
            background: top-led;
            width: 18px;
            height: 14px;
            x: parent.width / 2 - self.width / 2;
            y: 0px;
        }
        
        Rectangle {
            background: top-led;
            width: 18px;
            height: 14px;
            x: parent.width - self.width;
            y: 16px;
        }
    }

    // BOTTOM

    Rectangle {
        Rectangle {
            background: bottom-led;
            width: 18px;
            height: 14px;
            x: 0px;
            y: 0px;
        }
        
        Rectangle {
            background: bottom-led;
            width: 18px;
            height: 14px;
            x: parent.width / 2 - self.width / 2;
            y: 16px;
        }
        
        Rectangle {
            background: bottom-led;
            width: 18px;
            height: 14px;
            x: parent.width - self.width;
            y: 0px;
        }
    }
}

component child-panel {
    width: 254px;
    // min-height: 200px;
    
    in property <string> title: "Child Panel";
    in property <length> title-padding-x: 13px;
    in property <length> title-padding-y: 11px;

    in property <length> title-content-spacing: 10px;
    
    in property <length> content-padding: 16px;


    // Background
    Rectangle {
        background: Pallet.child-panel-background;
        
        // Title
        title-component := Text {
            text: title;
            font-size: 18px;
            font-weight: 700;
            color: Pallet.child-panel-title;
            x: title-padding-x;
            y: title-padding-y;
        }

        // Content
        Rectangle {
            width: parent.width - 2 * content-padding;
            height: parent.height - (2 * content-padding) - title-component.height - title-content-spacing;
            x: content-padding;
            y: parent.height - self.height - content-padding;

            @children
        }
    }
}

export component SchindlerPage inherits Page {
    title: "Schindler Bionic 3300";
    background: Pallet.background;
    GridLayout {
        spacing: 12px;
        padding: 12px;

        // Command Panel
        Rectangle {
            background: Pallet.panel-background;
            rowspan: 2;
            width: 286px;
            clip: true;

            VerticalLayout {
                padding: 16px;
                spacing: 16px;

                // List Mode
                child-panel {
                    title: "List Mode:";
                    height: 220px;
                    VerticalLayout {
                        spacing: 15px;
                        HorizontalLayout {
                            padding-left: 10px;
                            padding-right: 70px;
                            Text { 
                                text: "Enabled:";
                                font-weight: 700;
                                font-size: 13px;
                                vertical-alignment: center;
                                color: Pallet.default-text;
                            }
                            list-mode-enabled := ToggleSlide {
                                width: 50px;
                                height: 25px;
                                clicked => {
                                    SchindlerPageLogic.Send_Command_Number("List_Mode:=", self.toggled == true ? mode.active.mode : 0);
                                }
                            }
                        }

                        mode := MatrixRadio { 
                            button-height: 35px;
                            button-width: 65px;
                            button-padding: 0px;
                            button-spacing: 0px;

                            buttons: [  
                            {id: 0, mode: 1, text: "Common", active: true},
                            {id: 1, mode: 2, text: "Door", active: false},
                            {id: 2, mode: 3, text: "Drive", active: false},
                            {id: 3, mode: 4, text: "Cabin", active: false},
                            {id: 4, mode: 5, text: "Panels", active: false},
                            {id: 5, mode: 6, text: "BIO-BUS", active: false},
                            {id: 6, mode: 7, text: "CAN-BUS", active: false},
                            {id: 7, mode: 8, text: "Busilog", active: false},
                            {id: 8, mode: 9, text: "All", active: false} ];
                            
                            changed active => { 
                                if list-mode-enabled.toggled == true {
                                    SchindlerPageLogic.Send_Command_Number("List_Mode:=", self.active.mode); 
                                }
                            }
                        }   
                    }   
                }

                // SYSTEM INFO
                child-panel {
                    title: "System Information";
                    height: 220px;
                    VerticalLayout {
                        spacing: 8px;
                        HorizontalLayout {
                            padding-left: 10px;
                            padding-right: 50px;
                            Text { 
                                text: "System Info:";
                                font-weight: 700;
                                font-size: 13px;
                                color: Pallet.default-text;
                                vertical-alignment: center;
                            }
                            SimpleButton {
                                width: 50px;
                                height: 25px;

                                clicked => {
                                    SchindlerPageLogic.Send_Command_Number("SYSTEM_INFO:=", 1);
                                }
                            }
                        }

                        HorizontalLayout {
                            padding-left: 10px;
                            padding-right: 50px;
                            Text { 
                                text: "Read Sim Card:";
                                font-weight: 700;
                                font-size: 13px;
                                color: Pallet.default-text;
                                vertical-alignment: center;
                            }
                            SimpleButton {
                                width: 50px;
                                height: 25px;

                                clicked => {
                                    SchindlerPageLogic.Send_Command_Number("READ_SIM_CARD:=", 1);
                                }
                            }
                        }

                        HorizontalLayout {
                            padding-left: 10px;
                            padding-right: 50px;
                            Text { 
                                text: "Last Error:";
                                font-weight: 700;
                                font-size: 13px;
                                color: Pallet.default-text;
                                vertical-alignment: center;
                            }
                            SimpleButton {
                                width: 50px;
                                height: 25px;

                                clicked => {
                                    SchindlerPageLogic.Send_Command_Number("SHOW_LAST_ERR:=", 2);
                                }
                            }
                        }

                        HorizontalLayout {
                            padding-left: 10px;
                            padding-right: 50px;
                            Text { 
                                text: "COP Hardware:";
                                font-weight: 700;
                                font-size: 13px;
                                color: Pallet.default-text;
                                vertical-alignment: center;
                            }
                            SimpleButton {
                                width: 50px;
                                height: 25px;

                                clicked => {
                                    SchindlerPageLogic.Send_Command("COP_IDENTIFY_HW");
                                }
                            }
                        }

                        HorizontalLayout {
                            padding-left: 10px;
                            padding-right: 50px;
                            Text { 
                                text: "COP Software:";
                                font-weight: 700;
                                font-size: 13px;
                                color: Pallet.default-text;
                                vertical-alignment: center;
                            }
                            SimpleButton {
                                width: 50px;
                                height: 25px;

                                clicked => {
                                    SchindlerPageLogic.Send_Command("?");
                                }
                            }
                        }
                    }   
                }

                // Traffic Sim 
                child-panel {
                    title: "Traffic Simulation";
                    height: 130px;

                    VerticalLayout {
                        spacing: 8px;
                        HorizontalLayout {
                            spacing: 8px;
                            Text {
                                text: "Floor Call:";
                                font-weight: 700;
                                font-size: 13px;
                                color: Pallet.default-text;
                                vertical-alignment: center;
                            }

                            floor-calls := NumberInput {
                                value: 6;
                                width: 96px;
                                height: 28px;
                            }

                            SimpleButton {
                                width: 28px;
                                height: self.width;
                                background: Pallet.toggle-button-active;
                                background-select: Pallet.toggle-button-active.brighter(0.5);

                                clicked => {
                                    SchindlerPageLogic.Send_Command_Number("SIM_FLOOR_CALL:=", floor-calls.value);
                                }
                            }
                        }

                        HorizontalLayout {
                            spacing: 8px;
                            Text {
                                text: "Rand. Call:";
                                font-weight: 700;
                                font-size: 13px;
                                color: Pallet.default-text;
                                vertical-alignment: center;
                            }

                            rand-calls := NumberInput {
                                value: 6;
                                width: 96px;
                                height: 28px;
                            }

                            SimpleButton {
                                width: 28px;
                                height: self.width;
                                background: Pallet.toggle-button-active;
                                background-select: Pallet.toggle-button-active.brighter(0.5);

                                clicked => {
                                    SchindlerPageLogic.Send_Command_HEX("SIM_FLOOR_CALL:=", rand-calls.value);
                                }
                            }
                        }
                    }
                }

                // I/O Diagnostics
                child-panel {
                    title: "System Information";
                    height: 120px;
                    VerticalLayout {
                        spacing: 8px;
                        HorizontalLayout {
                            alignment: space-between;
                            padding-left: 10px;
                            padding-right: 10px;
                            Text { 
                                text: "Controller I/O Status";
                                font-weight: 700;
                                font-size: 13px;
                                color: Pallet.default-text;
                                vertical-alignment: center;
                            }
                            SimpleButton {
                                width: 50px;
                                height: 25px;
                            }
                        }

                        HorizontalLayout {
                            alignment: space-between;
                            padding-left: 10px;
                            padding-right: 10px;

                            Text { 
                                text: "Car I/O Status";
                                font-weight: 700;
                                font-size: 13px;
                                color: Pallet.default-text;
                                vertical-alignment: center;
                            }
                            SimpleButton {
                                width: 50px;
                                height: 25px;
                            }
                        }
                    }   
                }
            }
        }


        /// Middle Panel
        // This is so the Console can resize properly
        // slint doesn't support changing the col and row at runtime
        middle-panel := Rectangle {
            col: 1;
            row: 0;
            rowspan: 2;        

            // Visual Info
            Rectangle {
                y: 0;
                height: 494px;
                background: Pallet.panel-background;
                property <length> panel-width: parent.width / 3;
                in-out property <visual-info-tab-state> current-tab: visual-info-tab-state.Essential;

                // Middle Separator
                Rectangle {
                    background: Pallet.navigation-bar-tab-inactive;
                    height: 2px;
                    y: 37px;
                }

                VerticalLayout {
                    // NAVIGATION BAR
                    HorizontalLayout {

                        // ESSENTIAL
                        VerticalLayout {

                            // Selection Indicator
                            Rectangle {
                                width: 90px;
                                height: 3px;
                                Rectangle {
                                    height: 3px;
                                    width: 92px;
                                    x: 0px;
                                    background: current-tab == visual-info-tab-state.Essential ? Pallet.primary : transparent;
                                }
                            }

                            SimpleButton {
                                border-radius: 0;
                                background: current-tab == visual-info-tab-state.Essential ? Pallet.panel-background : transparent;
                                width: 90px;
                                height: 36px;

                                Text {
                                    y: 7px;
                                    text: "Essential";
                                    font-size: 16px;
                                    font-weight: 500;
                                    color: current-tab == visual-info-tab-state.Essential ? Pallet.navigation-bar-text-active : Pallet.navigation-bar-tab-inactive;
                                    vertical-alignment: center;
                                }

                                clicked => {
                                    current-tab = visual-info-tab-state.Essential;
                                }
                            }
                        }

                        // SEPARATOR
                        Rectangle {
                            width: 2px;
                            height: 34px;
                            y: 3px;
                            background: current-tab == visual-info-tab-state.Essential || current-tab == visual-info-tab-state.Doors ? Pallet.navigation-bar-tab-inactive : transparent;
                        }

                        // DOORS
                        VerticalLayout {

                            // Selection Indicator
                            Rectangle {
                                width: 90px;
                                Rectangle {
                                    height: 3px;
                                    width: 94px;
                                    background: current-tab == visual-info-tab-state.Doors ? Pallet.primary : transparent;
                                }
                            }

                            SimpleButton {
                                border-radius: 0;
                                background: current-tab == visual-info-tab-state.Doors ? Pallet.panel-background : transparent;
                                width: 90px;
                                height: 36px;

                                Text {
                                    y: 7px;
                                    text: "Doors";
                                    font-size: 16px;
                                    font-weight: 500;
                                    color: current-tab == visual-info-tab-state.Doors ? Pallet.navigation-bar-text-active : Pallet.navigation-bar-tab-inactive;
                                    vertical-alignment: center;
                                }

                                clicked => {
                                    current-tab = visual-info-tab-state.Doors;
                                }
                            }
                        }

                        // SEPARATOR
                        Rectangle {
                            width: 2px;
                            height: 34px;
                            y: 3px;
                            background: current-tab == visual-info-tab-state.Doors || current-tab == visual-info-tab-state.floor ? Pallet.navigation-bar-tab-inactive : transparent;
                        }

                        // LEVEL
                        VerticalLayout {

                            // Selection Indicator
                            Rectangle {
                                width: 90px;
                                Rectangle {
                                    height: 3px;
                                    width: 94px;
                                    background: current-tab == visual-info-tab-state.floor ? Pallet.primary : transparent;
                                }
                            }

                            SimpleButton {
                                border-radius: 0;
                                background: current-tab == visual-info-tab-state.floor ? Pallet.panel-background : transparent;
                                width: 90px;
                                height: 36px;

                                Text {
                                    y: 7px;
                                    text: "Floor";
                                    font-size: 16px;
                                    font-weight: 500;
                                    color: current-tab == visual-info-tab-state.floor ? Pallet.navigation-bar-text-active : Pallet.navigation-bar-tab-inactive;
                                    vertical-alignment: center;
                                }

                                clicked => {
                                    current-tab = visual-info-tab-state.floor;
                                }
                            }
                        }

                        // SEPARATOR
                        Rectangle {
                            width: 2px;
                            height: 34px;
                            y: 3px;
                            background: current-tab == visual-info-tab-state.floor ? Pallet.navigation-bar-tab-inactive : transparent;
                        }
                    }
                    // VISUAL INFO
                    GridLayout {
                        padding: 16px;
                        spacing: 16px;
                        Row {
                            Rectangle {
                                background: Pallet.child-panel-background;
                                colspan: 2;
                            }
        
                            Rectangle {
                                background: Pallet.child-panel-background;
                            }
        
                            Rectangle {
                                width: (600px - 64px) / 3;
                                rowspan: 2;
                                background: Pallet.child-panel-background;
                            }
                        }
        
                        Row {
                            Rectangle {
                                width: (600px - 64px) / 3;
                                height: self.width;
                                background: Pallet.child-panel-background;
                            }
        
                            Rectangle {
                                width: (600px - 64px) / 3;
                                height: self.width;
                                background: Pallet.child-panel-background;
                            }
                        }
                    }
                }

            }

            // Console
            console-panel := VerticalLayout {
                y: middle-panel.height - self.height;
                in-out property <bool> maximized: false;

                
                width: 600px;
                height: 270px;
                
                spacing: -1px;

                // HEADER
                Rectangle {
                    height: 30px;
                    background: Pallet.console-header-background;
                    border-width: 1px;
                    border-color: Pallet.console-border;

                    HorizontalLayout {
                        padding-left: 8px;
                        padding-right: 8px;
                        alignment: space-between;
                        HorizontalLayout {
                            spacing: 8px;
                            SimpleButton {
                                width: parent.height;
                                height: parent.height;
                                background: transparent;
                                Image {
                                    source: @image-url("../../assets/icons/Console_Bottom.png");
                                    width: 20px;
                                    height: 20px;
                                }

                                clicked => {
                                    console-flickable.viewport-y = console-flickable.height - console-flickable.viewport-height;
                                }
                            }
        
                            SimpleButton {
                                width: parent.height;
                                height: parent.height;
                                background: transparent;
                                Image {
                                    source: @image-url("../../assets/icons/Save.png");
                                    width: 20px;
                                    height: 20px;
                                }
                            }
        
                            SimpleButton {
                                width: parent.height;
                                height: parent.height;
                                background: transparent;
                                Image {
                                    source: @image-url("../../assets/icons/Erase.png");
                                    width: 20px;
                                    height: 20px;
                                }
                                clicked => {
                                    SchindlerPageLogic.output-message = [{time: "", message: ""}];
                                    console-flickable.viewport-y = console-flickable.height - console-flickable.viewport-height;
                                }
                            }
                        }

                        SimpleButton {
                            width: parent.height;
                            height: parent.height;
                            background: transparent;
                            Image {
                                source: @image-url("../../assets/icons/Console_Maximize.png");
                                width: 20px;
                                height: 20px;
                                colorize: #d3d3d3;
                            }

                            clicked => {
                                if (console-panel.maximized == false) {
                                    console-panel.maximized = true;

                                    console-panel.height = middle-panel.height ;
                                    console-panel.y = 0px;

                                    console-flickable.viewport-y = console-flickable.height - console-flickable.viewport-height;
                                } else {
                                    console-panel.maximized = false;
                                    
                                    console-panel.height = 270px;
                                    console-panel.y = middle-panel.height - console-panel.height;

                                    console-flickable.viewport-y = console-flickable.height - console-flickable.viewport-height;
                                }

                            }
                        }
                    }


                }

                // CONSOLE

                Rectangle {
                    border-width: 1px;
                    border-color: Pallet.console-border;
                    background: Pallet.console-background;

                    console-flickable := Flickable {
                        interactive: true;
                        width: parent.width;
                        viewport-width: self.width;
                        
                        viewport-y: {
                            if (self.viewport-height > self.height) { 0px } 
                            else { 0px }   
                        };

                        changed viewport-height => {
                            debug("Viewport Height: " + self.viewport-height / 1px);
                            debug("Viewport y: " + self.viewport-y / 1px);

                        }
        
                        VerticalLayout {
                            spacing: 4px;
                            padding: 8px;
                            alignment: end;

        
                            for output-message[i] in SchindlerPageLogic.output-message : HorizontalLayout {
                                spacing: 6px;
                                Text {
                                    y: 0px;
                                    text: SchindlerPageLogic.output-message[i].time;
                                    font-family: "Roboto";
                                    color: Pallet.console-time-text;
                                    horizontal-alignment: center;
                                    vertical-alignment: top;
                                }
        
                                Rectangle {
                                    width: i == SchindlerPageLogic.output-message.length - 1 ? 3px : 2px;
                                    Rectangle {
                                        height: parent.height - 4px;
                                        background: i == SchindlerPageLogic.output-message.length - 1 ? Pallet.primary : Pallet.console-time-text;
                                    }
                                }
        
                                Text {
                                    text: SchindlerPageLogic.output-message[i].message;
                                    width: parent.width - 47px - 6px;
                                    color: Pallet.console-main-text;
                                    wrap: word-wrap;
                                    horizontal-alignment: left;
                                    vertical-alignment: top;
                                    font-family: "Roboto";
                                }
                            }
                        }
                    } 
                }
            }

        }
        
        // Keypad
        Rectangle {
            width: 296px;
            
            col: 2;
            row: 0;
            rowspan: 2;
            
            
            VerticalLayout {
                spacing: 12px;

                // TOP
                Rectangle {
                    height: 258px;
                    background: Pallet.panel-background;
                }

                // BOTTOM
                Rectangle {
                    background: Pallet.panel-background;
                    height: 506px;

                    VerticalLayout {
                        alignment: space-between;
                        padding-top: 25px;

                        keypad-value := KeypadInput {
                            x: parent.width / 2 - self.width / 2;
                            width: 240px;
                            height: 60px;
                        }
    
                        GridLayout {
                            x: parent.width / 2 - self.width / 2;
                            width: 260px;
                            padding-bottom: 30px;
                            spacing: 10px;


                            Row {
                                SimpleButton { 
                                    width: 80px;
                                    height: 80px;
                                    background: Pallet.keypad-button;
                                    background-select: Pallet.keypad-button-pressed;
                                    Text { 
                                        text: "1"; 
                                        color: Pallet.keypad-text; 
                                        font-size: 30px;
                                    } 

                                    clicked => {
                                        keypad-value.value += "1";
                                    }
                                }
                                SimpleButton { 
                                    width: 80px;
                                    height: 80px;
                                    background: Pallet.keypad-button;
                                    background-select: Pallet.keypad-button-pressed;
                                    Text { 
                                        text: "2"; 
                                        color: Pallet.keypad-text; 
                                        font-size: 30px;
                                    }

                                    clicked => {
                                        keypad-value.value += "2";
                                    }
                                }
                                SimpleButton { 
                                    width: 80px;
                                    height: 80px;
                                    background: Pallet.keypad-button;
                                    background-select: Pallet.keypad-button-pressed;
                                    Text { 
                                        text: "3"; 
                                        color: Pallet.keypad-text; 
                                        font-size: 30px;
                                    }

                                    clicked => {
                                        keypad-value.value += "3";
                                    }
                                }
                            }
    
                            Row {
                                SimpleButton { 
                                    width: 80px;
                                    height: 80px;
                                    background: Pallet.keypad-button;
                                    background-select: Pallet.keypad-button-pressed;
                                    Text { 
                                        text: "4"; 
                                        color: Pallet.keypad-text; 
                                        font-size: 30px;
                                    }

                                    clicked => {
                                        keypad-value.value += "4";
                                    }
                                }
                                SimpleButton { 
                                    width: 80px;
                                    height: 80px;
                                    background: Pallet.keypad-button;
                                    background-select: Pallet.keypad-button-pressed;
                                    Text { 
                                        text: "5"; 
                                        color: Pallet.keypad-text; 
                                        font-size: 30px;
                                    }

                                    clicked => {
                                        keypad-value.value += "5";
                                    }
                                }
                                SimpleButton { 
                                    width: 80px;
                                    height: 80px;
                                    background: Pallet.keypad-button;
                                    background-select: Pallet.keypad-button-pressed;
                                    Text { 
                                        text: "6"; 
                                        color: Pallet.keypad-text; 
                                        font-size: 30px;
                                    }

                                    clicked => {
                                        keypad-value.value += "6";
                                    }
                                }
                            }
    
                            Row {
                                SimpleButton { 
                                    width: 80px;
                                    height: 80px;
                                    background: Pallet.keypad-button;
                                    background-select: Pallet.keypad-button-pressed;
                                    Text { 
                                        text: "7"; 
                                        color: Pallet.keypad-text; 
                                        font-size: 30px;
                                    } 

                                    clicked => {
                                        keypad-value.value += "7";
                                    }
                                }
                                SimpleButton { 
                                    width: 80px;
                                    height: 80px;
                                    background: Pallet.keypad-button;
                                    background-select: Pallet.keypad-button-pressed;
                                    Text { 
                                        text: "8"; 
                                        color: Pallet.keypad-text; 
                                        font-size: 30px;
                                    }

                                    clicked => {
                                        keypad-value.value += "8";
                                    }
                                }
                                SimpleButton { 
                                    width: 80px;
                                    height: 80px;
                                    background: Pallet.keypad-button;
                                    background-select: Pallet.keypad-button-pressed;
                                    Text { 
                                        text: "9"; 
                                        color: Pallet.keypad-text; 
                                        font-size: 30px;
                                    }

                                    clicked => {
                                        keypad-value.value += "9";
                                    }
                                }
                            }
    
                            Row {
                                SimpleButton { 
                                    width: 80px;
                                    height: 80px;
                                    background: Pallet.keypad-button;
                                    background-select: Pallet.keypad-button-pressed;
                                    Text { 
                                        text: "0"; 
                                        color: Pallet.keypad-text; 
                                        font-size: 30px;
                                    }

                                    clicked => {
                                        keypad-value.value += "0";
                                    }
                                }
                                SimpleButton { 
                                    colspan: 2;
                                    height: 80px;
                                    background: Pallet.primary;
                                    background-select: Pallet.primary;
                                    clicked => {
                                        SchindlerPageLogic.keypad-enter(keypad-value.value);
                                        keypad-value.value = "";
                                    }
                                }
                            }
                        }
                    }
                }
            }
            
        }
    }
}