import "./fonts/lcddot.ttf";
// import { MenuPage } from "./pages/menu-page.slint";
import { SchindlerPage } from "./pages/schindler-page.slint";
import { OtisPage } from "./pages/otis-page.slint";
import { OtisDoublePage } from "./pages/otis-double-page.slint";
import { SchindlerDoublePage } from "./pages/schindler-double-page.slint";
import { HomeMenu } from "./pages/menu/home-menu.slint";
import { ModuSoftKnePage } from "./pages/menu/modu-soft-kne.slint";
import { ModuSoftOtisMenu } from "./pages/menu/modu-soft-ots-menu.slint";
import { ModuSoftSchMenu } from "./pages/menu/modu-soft-sch-menu.slint";

import { SchindlerTestPage } from "./pages/schindler-test-page.slint";

// DEBUG
import { StyleTestPage } from "./pages/style-test.slint";
// ------------------------------------------------------




export enum Page {
    Menu,
    OtisMenu,
    ModuSoftKneMenu,
    ModuSoftSchMenu,

    OtisPage,
    OtisDoublePage,

    SchindlerPage,

    SchindlerTestPage,
    
    StyleTestPage,
}

export component AppWindow inherits Window {
    title: "MODU-TOOL";
    background: #ffffff;

    in-out property<Page> current-page: Page.SchindlerTestPage;
    
    width: 1280px;
    height: 800px;
    
    Rectangle {
        background: #9d9d9d;
        height: 300px;
        width: 460px;
    }
    

    // “Bubble up” child properties & callbacks so they are accessible from Rust:

    // ==================================================== //
    //                -- Global CALLBACKS --                //
    // ==================================================== //
        // Back to Menu
        callback back-to-menu-page();

    // ----------------------------------------------------



    // ================================================== //
    //                -- MENU CALLBACKS --                //
    // ================================================== //

        // Home MENU
        callback modusoft-kne();
        callback modusoft-ots();
        callback modusoft-thy();
        callback modusoft-ora();
        callback modusoft-sch();
        callback style-test();

        // Otis MENU
        callback otis-single-page();
        callback otis-double-page();

        // Schindler MENU
        callback schindler-page();

    // --------------------------------------------------


    // Schindler Page
    callback click-esc();
    callback click-up();
    callback click-down();
    callback click-ok();

    in-out property <[string]> lcd-text: [ "h", "e", "l", "l", "o", " ", " ", " ", "w", "o", "r", "l", "d", "!" ];


    // ================================================== //
    //                -- SCHINDLER Page --                //
    // ================================================== //
        // CALLBACKS:

        // PROPERTIES: 
        in-out property <string> console-output: "test123";

    // --------------------------------------------------


    // ============================================================================================================
    // Otis Page
    callback get-com-port-data();
    callback send-data-to-port(string);
    
    in-out property <string> output-text;

    // ============================================================================================================
    
    // ======================================= //
    //               DEBUGGING                 //
    // --------------------------------------- //

    if current-page == Page.StyleTestPage: StyleTestPage {
        // Bind Properties
    }
   
    // ======================================= //


    if current-page == Page.Menu: HomeMenu {
         // Bind Properties
        
        // Bind Callbacks
        modusoft-kne => { modusoft-kne() }
        modusoft-ots => { modusoft-ots() }
        modusoft-thy => { modusoft-thy() }
        modusoft-ora => { modusoft-ora() }
        modusoft-sch => { modusoft-sch() }
        style-test => { style-test() }
    }


    if current-page == Page.OtisMenu: ModuSoftOtisMenu {
        // Bind Properties
        
        // Bind Callbacks
        back-to-menu-page => { back-to-menu-page() }

        otis-single-page => { otis-single-page() }
        otis-double-page => { otis-double-page() }
    }

    if current-page == Page.OtisPage: OtisPage {
        // Bind Properties
        output-text: output-text;

        // Bind Callbacks
        get-com-port-data => { get-com-port-data() }
        back-to-menu-page => { back-to-menu-page() }
        // send-data-to-port => { send-data-to-port() } NO NEED TO BIND THIS 
    }

    if current-page == Page.OtisDoublePage: OtisDoublePage {
        // Bind Properties
        output-text: output-text;

        // Bind Callbacks
        // get-com-port-data => { get-com-port-data() }
        back-to-menu-page => { back-to-menu-page() }
        // send-data-to-port => { send-data-to-port() } NO NEED TO BIND THIS
    }


    if current-page == Page.ModuSoftKneMenu: ModuSoftKnePage {
        // Bind Properties

        // Bind Callbacks
        back-to-menu-page => { back-to-menu-page() }
    }



    if current-page == Page.ModuSoftSchMenu: ModuSoftSchMenu {
        // Bind Properties
        
        // Bind Callbacks 
        schindler-page => { schindler-page() }
        back-to-menu-page => { back-to-menu-page() }
    }
    
    if current-page == Page.SchindlerPage: SchindlerPage {
        // Bind Properties

        // Bind Callbacks
        click-esc => { click-esc() }
        click-up => { click-up() }
        click-down => { click-down() }
        click-ok => { click-ok() }  

        back-to-menu-page => { back-to-menu-page() }
    }
    

    if current-page == Page.SchindlerTestPage: SchindlerTestPage {
        // Bind Properties
        console-output <=> console-output;
        
        // Bind Callbacks
    }
}