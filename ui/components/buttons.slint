import { Pallet } from "./style.slint";

export component SimpleButton {
    in-out property <brush> background: Pallet.simple-button;
    in-out property <brush> background-select: Pallet.simple-button-pressed;
    in-out property <length> border-width;
    in-out property <brush> border-color;
    in-out property <length> border-radius: 4px;

    // Click Function
    callback clicked();
    property <bool> active: false;


    Rectangle {
        background: root.background;
        border-width: root.border-width;
        border-color: root.border-color;
        border-radius: root.border-radius;

        @children

        ta := TouchArea {
            clicked => {
                clicked();
                active = !active;
            }
        }
    
        states [
            active when ta.pressed: {
                background: root.background-select;
            }
        ] 
    }
}

export component ToggleButton {
    in property <string> text: "";

    property <brush> text-color: Pallet.toggle-button-text;

    // Click Function
    callback clicked();
    property <bool> active: false;

    BG := Rectangle {
        background: Pallet.toggle-button;
        border-radius: 4px;

        if text != "" || text != " ": Text {
            text: root.text;

            font-size: 13px;
            font-weight: 700;
            
            color: text-color;
            
            vertical-alignment: center;
            horizontal-alignment: center;
        }

        @children
    }

    ta := TouchArea {
        clicked => {
            clicked();
            active = !active;
        }
    }

    states [
        active when active: {
            BG.background: Pallet.toggle-button-active;
            text-color: Pallet.toggle-button-active-text;
        }
    ] 
}

export component ToggleSlide {
    in property <length> slide-offset: 8px;
    in-out property <bool> toggled: true;

    callback clicked();

    in property <brush> toggled-color: #188BFF;
    in property <brush> untoggled-color: #3f3f3f;

    width: 100px;
    height: 50px;
    in property <length> border-radius: root.height / 2;
    
    Rectangle {
        width: root.width;
        height: root.height;

        border-radius: root.border-radius;
        
        background: untoggled-color;
        

        slide := Rectangle {
            background: #e2e2e2;
            
            height: root.height - (slide-offset);
            width: root.height - (slide-offset);
            
            border-radius: self.height / 2;
            
            x: slide-offset/2;
            
            animate x {
                duration: 0.15s;
                easing: ease-in;
            }
            
        }

        animate background {
            delay: 0.075s;
            duration: 0.15s;    
            easing: ease-out;
        }
        
        // Click Function
        
        ta := TouchArea {
            clicked => {
                toggled = !toggled;
                clicked();
            }
        } 
        
        states [
            toggled when toggled: {
                background: toggled-color;
                slide.x: root.width - slide.width - (slide-offset/2);
            } 
        ] 
    }
}